name: Unificado

env:
  SONAR_ORG: 'erickorganizacion'
  SONAR_PROJECT: 'erickorganizacion_analizandoproyectos'
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  PHP_VERSION: '8.2'
  SONAR_SCANNER_VERSION: '4.8.0.2856'

on:
  push:
    branches: ["main"]
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  security-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del código
        uses: actions/checkout@v2

      - name: Configurar PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, xml, curl

      - name: Validar composer.json
        run: |
          cd biblioteca
          composer validate

      - name: Instalar dependencias de Composer
        run: |
          curl -sS https://getcomposer.org/installer | php
          mv composer.phar /usr/local/bin/composer
          cd biblioteca
          composer install --prefer-dist --no-progress

      - name: Actualizar dependencias de Python
        run: |
          pip install --upgrade urllib3 chardet

      - name: Instalar Snyk CLI
        run: npm install -g snyk

      - name: Ejecutar Snyk para verificar vulnerabilidades
        run: |
          cd biblioteca
          snyk test --sarif > ../reports/snyk-report.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Subir reporte SARIF de Snyk
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/snyk-report.sarif

      - name: Instalar Semgrep
        run: pip install semgrep

      - name: Crear directorio de informes
        run: mkdir -p reports

      # Ejecutar Semgrep con métricas desactivadas y modo verbose para más detalles.
      - name: Ejecutar Semgrep
        run: |
          semgrep --config=p/security-audit --config=p/php --sarif --output="reports/semgrep-report.sarif" --verbose --metrics=off

      - name: Subir resultado de Semgrep
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/semgrep-report.sarif

      - name: Subir informe de Semgrep como artefacto
        uses: actions/upload-artifact@v3
        with:
          name: informe-semgrep
          path: "reports/semgrep-report.sarif"

      # Crear carpeta para reportes
      - name: Crear carpeta de Reportes
        run: mkdir -p Reportes  # Crear directorio si no existe

      # Mover el informe HTML a la carpeta de Reportes
      - name: Mover informe a la carpeta Reportes
        run: |
          mv reports/semgrep-report.html Reportes/  # Mover el informe HTML a la carpeta

      # Publicar informe en GitHub Pages
      - name: Configurar Git para GitHub Pages
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Publicar informe en GitHub Pages
        run: |
          git fetch origin gh-pages  # Obtener la última versión de la rama gh-pages
          git checkout gh-pages  # Cambiar a la rama gh-pages
          cp Reportes/semgrep-report.html reporte-semgrep.html  # Copiar y renombrar
          git add reporte-semgrep.html
          git commit -m "Publicando informe Semgrep como reporte-semgrep.html" || echo "No hay cambios para confirmar"  # Manejar caso si no hay cambios

      - name: Escaneo de SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: 'https://sonarcloud.io'
        with:
          args: |
            -Dsonar.projectKey=${{ env.SONAR_PROJECT }}
            -Dsonar.organization=${{ env.SONAR_ORG }}
